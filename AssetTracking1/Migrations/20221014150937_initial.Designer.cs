// <auto-generated />
using System;
using AssetTracking1.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetTracking1.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20221014150937_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AssetTracking1.Models.Asset", b =>
                {
                    b.Property<Guid>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BrandName")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("AssetId");

                    b.HasIndex("OfficeId");

                    b.ToTable("Assets");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Asset");
                });

            modelBuilder.Entity("AssetTracking1.Models.Office", b =>
                {
                    b.Property<int>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OfficeId"), 1L, 1);

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("OfficeId");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            OfficeId = 1,
                            Currency = "SEK",
                            Name = "Sweden"
                        },
                        new
                        {
                            OfficeId = 2,
                            Currency = "NOK",
                            Name = "Norway"
                        },
                        new
                        {
                            OfficeId = 3,
                            Currency = "JPY",
                            Name = "Japan"
                        });
                });

            modelBuilder.Entity("AssetTracking1.Models.Computer", b =>
                {
                    b.HasBaseType("AssetTracking1.Models.Asset");

                    b.HasDiscriminator().HasValue("Computer");
                });

            modelBuilder.Entity("AssetTracking1.Models.Mobile", b =>
                {
                    b.HasBaseType("AssetTracking1.Models.Asset");

                    b.HasDiscriminator().HasValue("Mobile");
                });

            modelBuilder.Entity("AssetTracking1.Models.Desktop", b =>
                {
                    b.HasBaseType("AssetTracking1.Models.Computer");

                    b.HasDiscriminator().HasValue("Desktop");
                });

            modelBuilder.Entity("AssetTracking1.Models.Laptop", b =>
                {
                    b.HasBaseType("AssetTracking1.Models.Computer");

                    b.HasDiscriminator().HasValue("Laptop");
                });

            modelBuilder.Entity("AssetTracking1.Models.Asset", b =>
                {
                    b.HasOne("AssetTracking1.Models.Office", "Office")
                        .WithMany()
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsOne("AssetTracking1.Models.TrackInfo", "TrackInfo", b1 =>
                        {
                            b1.Property<Guid>("AssetId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<DateTime>("ChangeDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("CreatedDate")
                                .HasColumnType("datetime2");

                            b1.HasKey("AssetId");

                            b1.ToTable("Assets");

                            b1.WithOwner()
                                .HasForeignKey("AssetId");
                        });

                    b.Navigation("Office");

                    b.Navigation("TrackInfo")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
